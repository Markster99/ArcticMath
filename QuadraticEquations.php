<?php
include 'ReusableFunctions.php';

welcome('Quadratic Equations');
/* This welcomes a user  */

for ($i = 0; $i < 1000; $i++) {

        $a = (double)0;
        $b = (double)0;
        $c = (double)0;
        $d = (double)0;

        do {


            do {

                try {
                    $a = random_int(-5, 5);
                } catch (Exception $e) {
                }

                try {
                    $b = random_int(-10, 10);
                } catch (Exception $e) {
                }

                try {
                    $c = random_int(-5, 5);
                } catch (Exception $e) {
                }

                try {
                    $d = random_int(-10, 10);
                } catch (Exception $e) {
                }

            } while ($a === 0 || $b === 0 || $c === 0 || $d === 0);//Start with (ax-b)(cx-d)=0

            $a1 = $a * $c;
            $b1 = -(($a * $d) + ($b * $c));
            $c1 = $b * $d;
            //Coefficients of the equation generated by the expansion of (ax-b)(cx-d)

            $d1 = ($b1 ** 2) - (4 * $a1 * $c1);
            //The discriminant of the newly generated equation

            $turning_point_prefix='The turning point of the quadratic equation is ';
            $turning_point_suffix=' This is a ';
            $x_turning_point=(-$b1)/(2*$a1);
            $y_turning_point = $c1 - (($b1 ** 2) / (4 * $a1));
            $type_of_turning_point='turning point of the quadratic equation.';
            $concavity = 2 * $a1;//The coefficient of x in the gradient or the 2nd Derivative

            if ($concavity > 0) {
                $type_of_turning_point='local minimum';

            } else if ($concavity < 0) {
                $type_of_turning_point='local maximum';
            }

            $turning_point=array($turning_point_prefix,$x_turning_point,$y_turning_point,$turning_point_suffix,$type_of_turning_point);









            $root1 = $b / $a;
            $root2 = $d / $c;
            if($root1!==$root2) {
                $roots = array($root1, $root2);
                $root_type = 'This quadratic equation has 2 distinct real roots.';
                $equation_suffix = 'Find the possible values of x when y crosses the x-axis.';

            }
            else {
                $roots=array($root1);//This is the the repeated root
                $root_type = 'This quadratic equation has a single repeated real root.';
                $equation_suffix = 'Find the value of x when y crosses the x-axis.';
            }// Root Type could be implemented as a hint

        } while ($a1 === 0 || $b1 === 0 || $c1 === 0 ||$d1 < 0);


        $a1 = format1stCoe($a1);
        $b1 = format1stCoe($b1);
        $c1 = format1stCoe($c1);
        $b1 = formatNum($b1);
        $c1 = formatNum($c1);


        $gradient = $concavity . 'x ' . $b;
        $equation = 'y = ' . $a1 . 'x^2 ' . $b1 . 'x ' . $c1 . "\r\n";

        $bar = '----------------------------------------------------------------------------------';


        echo print_r($turning_point)."\r\n";

        echo $equation . "\r\n" . $bar . "\r\n";



    /* This generates a valid quadratic equation as well as a hint and its roots*/
}